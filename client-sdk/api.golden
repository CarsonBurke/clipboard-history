pub mod clipboard_history_client_sdk
pub enum clipboard_history_client_sdk::Error
pub clipboard_history_client_sdk::Error::Core(clipboard_history_core::Error)
pub clipboard_history_client_sdk::Error::InvalidResponse
pub clipboard_history_client_sdk::Error::InvalidResponse::context: alloc::borrow::Cow<'static, str>
pub clipboard_history_client_sdk::Error::VersionMismatch
pub clipboard_history_client_sdk::Error::VersionMismatch::actual: u8
impl core::convert::From<clipboard_history_core::Error> for clipboard_history_client_sdk::Error
pub fn clipboard_history_client_sdk::Error::from(source: clipboard_history_core::Error) -> Self
impl core::error::Error for clipboard_history_client_sdk::Error
pub fn clipboard_history_client_sdk::Error::source(&self) -> core::option::Option<&(dyn core::error::Error + 'static)>
impl core::fmt::Debug for clipboard_history_client_sdk::Error
pub fn clipboard_history_client_sdk::Error::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for clipboard_history_client_sdk::Error
pub fn clipboard_history_client_sdk::Error::fmt(&self, __formatter: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for clipboard_history_client_sdk::Error
impl core::marker::Send for clipboard_history_client_sdk::Error
impl core::marker::Sync for clipboard_history_client_sdk::Error
impl core::marker::Unpin for clipboard_history_client_sdk::Error
impl !core::panic::unwind_safe::RefUnwindSafe for clipboard_history_client_sdk::Error
impl !core::panic::unwind_safe::UnwindSafe for clipboard_history_client_sdk::Error
impl<T, U> core::convert::Into<U> for clipboard_history_client_sdk::Error where U: core::convert::From<T>
pub fn clipboard_history_client_sdk::Error::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for clipboard_history_client_sdk::Error where U: core::convert::Into<T>
pub type clipboard_history_client_sdk::Error::Error = core::convert::Infallible
pub fn clipboard_history_client_sdk::Error::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for clipboard_history_client_sdk::Error where U: core::convert::TryFrom<T>
pub type clipboard_history_client_sdk::Error::Error = <U as core::convert::TryFrom<T>>::Error
pub fn clipboard_history_client_sdk::Error::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::string::ToString for clipboard_history_client_sdk::Error where T: core::fmt::Display + core::marker::Sized
pub fn clipboard_history_client_sdk::Error::to_string(&self) -> alloc::string::String
impl<T> core::any::Any for clipboard_history_client_sdk::Error where T: 'static + core::marker::Sized
pub fn clipboard_history_client_sdk::Error::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for clipboard_history_client_sdk::Error where T: core::marker::Sized
pub fn clipboard_history_client_sdk::Error::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for clipboard_history_client_sdk::Error where T: core::marker::Sized
pub fn clipboard_history_client_sdk::Error::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for clipboard_history_client_sdk::Error
pub fn clipboard_history_client_sdk::Error::from(t: T) -> T
pub fn clipboard_history_client_sdk::add<Server: std::os::fd::owned::AsFd, Data: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix, to: clipboard_history_core::protocol::RingKind, mime_type: clipboard_history_core::protocol::MimeType, data: Data) -> core::result::Result<clipboard_history_core::protocol::AddResponse, clipboard_history_client_sdk::Error>
pub unsafe fn clipboard_history_client_sdk::add_recv<Server: std::os::fd::owned::AsFd>(server: Server, flags: rustix::backend::net::send_recv::RecvFlags) -> core::result::Result<clipboard_history_core::protocol::AddResponse, clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::add_send<Server: std::os::fd::owned::AsFd, Data: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix, to: clipboard_history_core::protocol::RingKind, mime_type: clipboard_history_core::protocol::MimeType, data: Data, flags: rustix::backend::net::send_recv::SendFlags) -> core::result::Result<(), clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::connect_to_server(addr: &rustix::backend::net::addr::SocketAddrUnix) -> core::result::Result<std::os::fd::owned::OwnedFd, clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::garbage_collect<Server: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix) -> core::result::Result<(), clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::move_to_front<Server: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix, id: u64, to: core::option::Option<clipboard_history_core::protocol::RingKind>) -> core::result::Result<clipboard_history_core::protocol::MoveToFrontResponse, clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::remove<Server: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix, id: u64) -> core::result::Result<clipboard_history_core::protocol::RemoveResponse, clipboard_history_client_sdk::Error>
pub fn clipboard_history_client_sdk::swap<Server: std::os::fd::owned::AsFd>(server: Server, addr: &rustix::backend::net::addr::SocketAddrUnix, id1: u64, id2: u64) -> core::result::Result<clipboard_history_core::protocol::SwapResponse, clipboard_history_client_sdk::Error>
